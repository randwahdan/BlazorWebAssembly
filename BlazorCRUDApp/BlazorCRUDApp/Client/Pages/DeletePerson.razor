@page "/deletecontact/{Id}"
@using BlazorCRUDApp.Shared

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<h2>Delete Contact</h2>
@if (contact != null)
{
    <p>Are you sure you want to delete this contact with Name: <b>@contact.FirstName @contact.LastName</b></p>
    <div class="row">
        <div class="col-md-6">
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <td><strong>Name</strong></td>
                        <td>@contact.FirstName @contact.LastName</td>
                    </tr>
                    <tr>
                        <td><strong>Email</strong></td>
                        <td>@contact.Email</td>
                    </tr>
                    <tr>
                        <td><strong>Mobile Number</strong></td>
                        <td>@contact.PhoneNumber</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <button type="button" class="btn btn-danger" @onclick="@Delete">Delete</button>
            <button type="button" class="btn btn-secondary" @onclick="@Cancel">Cancel</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    ContactViewModel contact = new ContactViewModel();
    protected override async Task OnInitializedAsync()
    {
        contact = await Http.GetFromJsonAsync<ContactViewModel>("api/contact/" + Id);
    }

    protected async Task Delete()
    {
        var response = await Http.DeleteAsync("api/Contact/" + Id);
        bool deleteResponse = await response.Content.ReadFromJsonAsync<bool>();
        if (deleteResponse)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Deleted Successfully!");
            NavigationManager.NavigateTo("contactlist");
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("contactlist");
    }
}